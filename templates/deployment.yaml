apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "thehive.fullname" . }}
  labels:
    {{- include "thehive.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "thehive.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "thehive.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        {{- if .Values.attachmentStorage.pvc.enabled }}
        - name: attachment-storage
          persistentVolumeClaim:
            claimName: {{ include "thehive.attachmentPVCName" . }}
        {{- end }}
        {{- if and (not .Values.cassandra.enabled) .Values.localDatabaseStorage.pvc.enabled }}
        - name: local-database
          persistentVolumeClaim:
            claimName: {{ include "thehive.localDatabasePVCName" . }}
        {{- end }}
        {{- if or .Values.elasticsearch.eck.enabled .Values.elasticsearch.external.enabled }}
        {{- if .Values.elasticsearch.tls }}
        {{- include "thehive.esCACertVolumes" . | nindent 8 }}
        - name: es-trust-store
          emptyDir: {}
        {{- end }}
        {{- else }}
        {{- if .Values.localIndexStorage.pvc.enabled }}
        - name: local-index
          persistentVolumeClaim:
            claimName: {{ include "thehive.localIndexPVCName" . }}
        {{- end }}
        {{- end }}
        - name: config-templates
          configMap:
            name: {{ include "thehive.templatesConfigMapName" . }}
        - name: etc-thehive
          emptyDir: {}
        {{- if .Values.extraHiveConfigurations }}
        - name: etc-thehive-extra
          secret:
            secretName: {{ include "thehive.extraconfigsecret" . | quote }}
        {{- end }}
        {{- include "thehive.wsCACertVolumes" . | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "thehive.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        # This templating, done at runtime rather than install time,
        # is done so that the non-secret parts of the config file can
        # be more easily seen.
        - name: config-templates
          {{- /* Image is hardcoded. FIXME? */}}
          image: busybox
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-templates
              mountPath: /tmp/templates
            - name: etc-thehive
              mountPath: /tmp/thehive
          # For each @@FOO@@ in the config file set up in the
          # configmap, there must be a FOO in this env. Values should
          # be shell-safe, natch.
          env:
            - name: PLAY_HTTP_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "thehive.playsecretname" . | quote }}
                  key: secret
            {{- if or .Values.elasticsearch.eck.enabled .Values.elasticsearch.external.enabled }}
            {{- if .Values.elasticsearch.tls }}
            # There are no private keys to protect in this trust
            # store, so its password need not actually secure it.
            - name: ES_TRUST_STORE_PASSWORD
              value: changeit
            {{- end }}
            - name: ES_USERNAME
              value: {{ .Values.elasticsearch.username | quote }}
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.userSecret | default (include "thehive.elasticUserSecretName" .) | quote }}
                  key: {{ .Values.elasticsearch.username | quote }}
            {{- end }}
            {{- if .Values.cassandra.enabled }}
            - name: CQL_USERNAME
              value: {{ .Values.cassandra.dbUser.user | default "cassandra" | quote }}
            - name: CQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "thehive.cassandra.secretname" . | quote }}
                  key: "cassandra-password"
            {{- end }}
          command:
            - sh
            - -c
            - |
              cd /tmp/thehive; for x in /tmp/templates/*; do
                  if echo "$x" | grep ".tmpl\$"; then
                      out=$$(basename $x | sed "s/.tmpl$//")
                      cat $x | \
                         sed "s/@@PLAY_HTTP_SECRET_KEY@@/$PLAY_HTTP_SECRET_KEY/g" | \
                         {{- if or .Values.elasticsearch.eck.enabled .Values.elasticsearch.external.enabled }}
                         {{- if .Values.elasticsearch.tls }}
                         sed "s/@@ES_TRUST_STORE_PASSWORD@@/$ES_TRUST_STORE_PASSWORD/g" | \
                         {{- end }}
                         sed "s/@@ES_USERNAME@@/$ES_USERNAME/g" | \
                         sed "s/@@ES_PASSWORD@@/$ES_PASSWORD/g" | \
                         {{- end }}
                         {{- if .Values.cassandra.enabled }}
                         sed "s/@@CQL_USERNAME@@/$CQL_USERNAME/g" | \
                         sed "s/@@CQL_PASSWORD@@/$CQL_PASSWORD/g" | \
                         {{- end }}
                      cat > "$out"
                  else
                      cp $x $(basename $x)
                  fi
                done
        {{- if or .Values.elasticsearch.eck.enabled .Values.elasticsearch.external.enabled }}
        {{- if .Values.elasticsearch.tls }}
        - name: trust-store
          {{- /* Image is hardcoded. FIXME? */}}
          image: openjdk:11
          imagePullPolicy: IfNotPresent
          volumeMounts:
            {{- include "thehive.esTrustStoreVolumeMount" . | nindent 12 }}
            {{- include "thehive.esCACertVolumeMounts" . | nindent 12 }}
          env:
            - name: ES_TRUST_STORE_PASSWORD
              value: changeit
          command:
            - sh
            - -c
            - |
              keytool -importcert -keystore {{ include "thehive.esTrustStore" . | quote }} \
                      -file {{ include "thehive.esCACert" . | quote }} \
                      -alias es-http-ca \
                      -storepass "$ES_TRUST_STORE_PASSWORD" \
                      -noprompt
        {{- end }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/status
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          # there is a sleep 30 to wait for cassandra to come up.
          # avoid getting killed for not being live.
          startupProbe:
            httpGet:
              path: /api/v1/status
              port: http
            timeoutSeconds: 15
            failureThreshold: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/thehive
              name: etc-thehive
            {{- if .Values.extraHiveConfigurations }}
            - mountPath: /etc/thehive/extra
              name: etc-thehive-extra
            {{- end }}
            {{- if .Values.attachmentStorage.pvc.enabled }}
            - mountPath: /data/files
              name: attachment-storage
            {{- end }}
            {{- if and (not .Values.cassandra.enabled) .Values.localDatabaseStorage.pvc.enabled }}
            - mountPath: /data/db
              name: local-database
            {{- end }}
            {{- if (or .Values.elasticsearch.eck.enabled .Values.elasticsearch.external.enabled) }}
            {{- if .Values.elasticsearch.tls }}
            - name: es-http-ca
              mountPath: /opt/thehive/es-http-ca
            {{- end }}
            {{- else }}
            {{- if .Values.localIndexStorage.pvc.enabled }}
            - mountPath: /data/index
              name: local-index
            {{- end }}
            {{- end }}
            {{ include "thehive.wsCACertVolumeMounts" . | nindent 12 }}
          env:
            - name: TH_NO_CONFIG
              value: "1"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
